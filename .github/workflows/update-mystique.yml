name: CI

on:
  push:
    branches:
      - master
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Retrieve update date of Mystique image
        run: |
          update_time=$(curl -X GET 'https://hub.docker.com/v2/repositories/${{ secrets.MYSTIQUE_DOCKER_IMAGE }}/tags/latest' | jq -r '.last_updated')
          if [ $update_time == null ]; then
            echo ::set-env name=MYSTIQUE_UPDATE_TIME::0
          else
            update_time=$(date -d $update_time +%Y%m%d%H%M%S)
            echo ::add-mask::$update_time
            echo ::set-env name=MYSTIQUE_UPDATE_TIME::$update_time  
          fi

      - name: Retrieve update date of source image
        run: |
          update_time=$(date -d $(curl -X GET https://hub.docker.com/v2/repositories/${{ secrets.SOURCE_DOCKER_IMAGE }}/tags/latest | jq -r '.last_updated') +%Y%m%d%H%M%S)
          echo ::add-mask::$update_time
          echo ::set-env name=SOURCE_UPDATE_TIME::$update_time

      - name: Log in to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Update Dockerfile and build
        if: env.MYSTIQUE_UPDATE_TIME < env.SOURCE_UPDATE_TIME
        run: |
          sed -i 's,%SOURCE_DOCKER_IMAGE%,${{ secrets.SOURCE_DOCKER_IMAGE }},g' Dockerfile
          docker build -t ${{ secrets.MYSTIQUE_DOCKER_IMAGE }}:latest .

      - name: push image to DockerHub
        run: docker push ${{ secrets.MYSTIQUE_DOCKER_IMAGE }}:latest
